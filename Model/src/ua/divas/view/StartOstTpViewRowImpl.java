package ua.divas.view;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import ua.divas.model.StartOstTpImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 01 22:02:02 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StartOstTpViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_STARTOSTTP = 0;

    @Override
    public boolean isAttributeUpdateable(int i) {
        BigDecimal editable = this.getSoEditable();
        if (editable.intValue()==0) {
            return false;
        } else { 
        return super.isAttributeUpdateable(i);
            }
    }

    @Override
    protected void create(AttributeList attributeList) {
        this.setSoEditable(new BigDecimal(1));
        //this.setForValidation(new Integer(2));
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        StartOstId,
        PlanAccDebId,
        PlanaccDebName,
        Subconto1Deb,
        Subconto2Deb,
        PlanAccKredId,
        PlanaccKredName,
        Subconto1Kred,
        Subconto2Kred,
        Summ,
        Description,
        SoEditable,
        SwitcherSubcDeb1,
        SwitcherSubcKred1,
        SwitcherSubcDeb2,
        SwitcherSubcKred2,
        DebSubcCount,
        KredSubcCount,
        StartOstView1,
        PlanAccView1,
        DivisionsView1,
        KassaView1,
        KontragentsView1,
        NomenklaturaView1,
        ZatratyView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int STARTOSTID = AttributesEnum.StartOstId.index();
    public static final int PLANACCDEBID = AttributesEnum.PlanAccDebId.index();
    public static final int PLANACCDEBNAME = AttributesEnum.PlanaccDebName.index();
    public static final int SUBCONTO1DEB = AttributesEnum.Subconto1Deb.index();
    public static final int SUBCONTO2DEB = AttributesEnum.Subconto2Deb.index();
    public static final int PLANACCKREDID = AttributesEnum.PlanAccKredId.index();
    public static final int PLANACCKREDNAME = AttributesEnum.PlanaccKredName.index();
    public static final int SUBCONTO1KRED = AttributesEnum.Subconto1Kred.index();
    public static final int SUBCONTO2KRED = AttributesEnum.Subconto2Kred.index();
    public static final int SUMM = AttributesEnum.Summ.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int SOEDITABLE = AttributesEnum.SoEditable.index();
    public static final int SWITCHERSUBCDEB1 = AttributesEnum.SwitcherSubcDeb1.index();
    public static final int SWITCHERSUBCKRED1 = AttributesEnum.SwitcherSubcKred1.index();
    public static final int SWITCHERSUBCDEB2 = AttributesEnum.SwitcherSubcDeb2.index();
    public static final int SWITCHERSUBCKRED2 = AttributesEnum.SwitcherSubcKred2.index();
    public static final int DEBSUBCCOUNT = AttributesEnum.DebSubcCount.index();
    public static final int KREDSUBCCOUNT = AttributesEnum.KredSubcCount.index();
    public static final int STARTOSTVIEW1 = AttributesEnum.StartOstView1.index();
    public static final int PLANACCVIEW1 = AttributesEnum.PlanAccView1.index();
    public static final int DIVISIONSVIEW1 = AttributesEnum.DivisionsView1.index();
    public static final int KASSAVIEW1 = AttributesEnum.KassaView1.index();
    public static final int KONTRAGENTSVIEW1 = AttributesEnum.KontragentsView1.index();
    public static final int NOMENKLATURAVIEW1 = AttributesEnum.NomenklaturaView1.index();
    public static final int ZATRATYVIEW1 = AttributesEnum.ZatratyView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StartOstTpViewRowImpl() {
    }

    /**
     * Gets StartOstTp entity object.
     * @return the StartOstTp
     */
    public StartOstTpImpl getStartOstTp() {
        return (StartOstTpImpl) getEntity(ENTITY_STARTOSTTP);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for START_OST_ID using the alias name StartOstId.
     * @return the START_OST_ID
     */
    public String getStartOstId() {
        return (String) getAttributeInternal(STARTOSTID);
    }

    /**
     * Sets <code>value</code> as attribute value for START_OST_ID using the alias name StartOstId.
     * @param value value to set the START_OST_ID
     */
    public void setStartOstId(String value) {
        setAttributeInternal(STARTOSTID, value);
    }

    /**
     * Gets the attribute value for PLAN_ACC_DEB_ID using the alias name PlanAccDebId.
     * @return the PLAN_ACC_DEB_ID
     */
    public String getPlanAccDebId() {
        return (String) getAttributeInternal(PLANACCDEBID);
    }

    /**
     * Sets <code>value</code> as attribute value for PLAN_ACC_DEB_ID using the alias name PlanAccDebId.
     * @param value value to set the PLAN_ACC_DEB_ID
     */
    public void setPlanAccDebId(String value) {
        setAttributeInternal(PLANACCDEBID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PlanaccDebName.
     * @return the PlanaccDebName
     */
    public String getPlanaccDebName() {
        return (String) getAttributeInternal(PLANACCDEBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PlanaccDebName.
     * @param value value to set the  PlanaccDebName
     */
    public void setPlanaccDebName(String value) {
        setAttributeInternal(PLANACCDEBNAME, value);
    }

    /**
     * Gets the attribute value for SUBCONTO1_DEB using the alias name Subconto1Deb.
     * @return the SUBCONTO1_DEB
     */
    public String getSubconto1Deb() {
        return (String) getAttributeInternal(SUBCONTO1DEB);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBCONTO1_DEB using the alias name Subconto1Deb.
     * @param value value to set the SUBCONTO1_DEB
     */
    public void setSubconto1Deb(String value) {
        setAttributeInternal(SUBCONTO1DEB, value);
    }

    /**
     * Gets the attribute value for SUBCONTO2_DEB using the alias name Subconto2Deb.
     * @return the SUBCONTO2_DEB
     */
    public String getSubconto2Deb() {
        return (String) getAttributeInternal(SUBCONTO2DEB);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBCONTO2_DEB using the alias name Subconto2Deb.
     * @param value value to set the SUBCONTO2_DEB
     */
    public void setSubconto2Deb(String value) {
        setAttributeInternal(SUBCONTO2DEB, value);
    }

    /**
     * Gets the attribute value for PLAN_ACC_KRED_ID using the alias name PlanAccKredId.
     * @return the PLAN_ACC_KRED_ID
     */
    public String getPlanAccKredId() {
        return (String) getAttributeInternal(PLANACCKREDID);
    }

    /**
     * Sets <code>value</code> as attribute value for PLAN_ACC_KRED_ID using the alias name PlanAccKredId.
     * @param value value to set the PLAN_ACC_KRED_ID
     */
    public void setPlanAccKredId(String value) {
        setAttributeInternal(PLANACCKREDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PlanaccKredName.
     * @return the PlanaccKredName
     */
    public String getPlanaccKredName() {
        return (String) getAttributeInternal(PLANACCKREDNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PlanaccKredName.
     * @param value value to set the  PlanaccKredName
     */
    public void setPlanaccKredName(String value) {
        setAttributeInternal(PLANACCKREDNAME, value);
    }

    /**
     * Gets the attribute value for SUBCONTO1_KRED using the alias name Subconto1Kred.
     * @return the SUBCONTO1_KRED
     */
    public String getSubconto1Kred() {
        return (String) getAttributeInternal(SUBCONTO1KRED);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBCONTO1_KRED using the alias name Subconto1Kred.
     * @param value value to set the SUBCONTO1_KRED
     */
    public void setSubconto1Kred(String value) {
        setAttributeInternal(SUBCONTO1KRED, value);
    }

    /**
     * Gets the attribute value for SUBCONTO2_KRED using the alias name Subconto2Kred.
     * @return the SUBCONTO2_KRED
     */
    public String getSubconto2Kred() {
        return (String) getAttributeInternal(SUBCONTO2KRED);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBCONTO2_KRED using the alias name Subconto2Kred.
     * @param value value to set the SUBCONTO2_KRED
     */
    public void setSubconto2Kred(String value) {
        setAttributeInternal(SUBCONTO2KRED, value);
    }

    /**
     * Gets the attribute value for SUMM using the alias name Summ.
     * @return the SUMM
     */
    public BigDecimal getSumm() {
        return (BigDecimal) getAttributeInternal(SUMM);
    }

    /**
     * Sets <code>value</code> as attribute value for SUMM using the alias name Summ.
     * @param value value to set the SUMM
     */
    public void setSumm(BigDecimal value) {
        setAttributeInternal(SUMM, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoEditable.
     * @return the SoEditable
     */
    public BigDecimal getSoEditable() {
        return (BigDecimal) getAttributeInternal(SOEDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoEditable.
     * @param value value to set the  SoEditable
     */
    public void setSoEditable(BigDecimal value) {
        setAttributeInternal(SOEDITABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SwitcherAttr.
     * @return the SwitcherAttr
     */
    public String getSwitcherSubcDeb1() {
        return (String) getAttributeInternal(SWITCHERSUBCDEB1);
    }

    /**
     * Gets the attribute value for the calculated attribute SwitcherSubcKred1.
     * @return the SwitcherSubcKred1
     */
    public String getSwitcherSubcKred1() {
        return (String) getAttributeInternal(SWITCHERSUBCKRED1);
    }

    /**
     * Gets the attribute value for the calculated attribute SwitcherSubcDeb2.
     * @return the SwitcherSubcDeb2
     */
    public String getSwitcherSubcDeb2() {
        return (String) getAttributeInternal(SWITCHERSUBCDEB2);
    }

    /**
     * Gets the attribute value for the calculated attribute SwitcherSubcKred2.
     * @return the SwitcherSubcKred2
     */
    public String getSwitcherSubcKred2() {
        return (String) getAttributeInternal(SWITCHERSUBCKRED2);
    }

    /**
     * Gets the attribute value for the calculated attribute DebSubcCount.
     * @return the DebSubcCount
     */
    public Long getDebSubcCount() {
        return (Long) getAttributeInternal(DEBSUBCCOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute KredSubcCount.
     * @return the KredSubcCount
     */
    public Long getKredSubcCount() {
        return (Long) getAttributeInternal(KREDSUBCCOUNT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StartOstView1.
     */
    public RowSet getStartOstView1() {
        return (RowSet) getAttributeInternal(STARTOSTVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PlanAccView1.
     */
    public RowSet getPlanAccView1() {
        return (RowSet) getAttributeInternal(PLANACCVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DivisionsView1.
     */
    public RowSet getDivisionsView1() {
        return (RowSet) getAttributeInternal(DIVISIONSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> KassaView1.
     */
    public RowSet getKassaView1() {
        return (RowSet) getAttributeInternal(KASSAVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> KontragentsView1.
     */
    public RowSet getKontragentsView1() {
        return (RowSet) getAttributeInternal(KONTRAGENTSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> NomenklaturaView1.
     */
    public RowSet getNomenklaturaView1() {
        return (RowSet) getAttributeInternal(NOMENKLATURAVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ZatratyView1.
     */
    public RowSet getZatratyView1() {
        return (RowSet) getAttributeInternal(ZATRATYVIEW1);
    }
}

