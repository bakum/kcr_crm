package ua.divas.view;

import oracle.jbo.Row;
import oracle.jbo.Variable;
import oracle.jbo.common.VariableImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 01 23:24:07 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StartOstTpViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public StartOstTpViewImpl() {
    }

    private ViewRowSetImpl getPlanAccRowSet(String PlanId) {
        VariableImpl z = new VariableImpl();
        z.setName("PlanId");
        ViewObjectImpl vo = (ViewObjectImpl) this.getRootApplicationModule().findViewObject("PlanAccSubcontoView1");
        ViewRowSetImpl rs =
            (ViewRowSetImpl) vo.findByViewCriteriaWithBindVars(vo.getViewCriteria("PlanAccSubcontoByPlanId"), -1,
                                                               vo.QUERY_MODE_SCAN_DATABASE_TABLES, new Variable[] { z }, new Object[] {
                                                               PlanId });
        return rs;
    }

    private ViewRowSetImpl getPlanTypeSubcontoRowSet(String PlanTypeId) {
        VariableImpl z = new VariableImpl();
        z.setName("PlanTypeId");
        ViewObjectImpl vo = (ViewObjectImpl) this.getRootApplicationModule().findViewObject("PlanTypeSubcontoView1");
        ViewRowSetImpl rs =
            (ViewRowSetImpl) vo.findByViewCriteriaWithBindVars(vo.getViewCriteria("PlanTypeSubcontoById"), -1,
                                                               vo.QUERY_MODE_SCAN_DATABASE_TABLES, new Variable[] { z }, new Object[] {
                                                               PlanTypeId });
        return rs;
    }
    
    public Long retrieveCountAccPlan(String PlanId) {
        ViewRowSetImpl rs = this.getPlanAccRowSet(PlanId);
        //rs.getEstimatedRowCount();
        
        return new Long(rs.getEstimatedRowCount());
    }

    public String retrieveTypeSubc1Deb(String PlanId) {
        ViewRowSetImpl rs = this.getPlanAccRowSet(PlanId);
        Row row = rs.first();
        if (row != null) {
            String pts = (String) row.getAttribute("PlanTypeSubc");
            rs = this.getPlanTypeSubcontoRowSet(pts);
            row = rs.first();
            if (row != null) {
                String rv = (String) row.getAttribute("Fullname");
                if (rv.equals("ЦФО")) {
                    return "LOV_Deb1_Div";
                } else if (rv.equals("Касса")) {
                    return "LOV_Deb1_Kassa";
                } else if (rv.equals("Контрагенты")) {
                    return "LOV_Deb1_Kontrag";
                } else if (rv.equals("Номенклатура")) {
                    return "LOV_Deb1_Nom";
                } else {
                    return "LOV_Deb1_Zatr";
                }

            }

        }
        return null;
    }

    public String retrieveTypeSubc2Deb(String PlanId) {
        ViewRowSetImpl rs = this.getPlanAccRowSet(PlanId);
        Row row = rs.first();
        if (row != null) {
            row = rs.next();
            if (row != null) {
                String pts = (String) row.getAttribute("PlanTypeSubc");
                rs = this.getPlanTypeSubcontoRowSet(pts);
                row = rs.first();
                if (row != null) {
                    String rv = (String) row.getAttribute("Fullname");
                    if (rv.equals("ЦФО")) {
                        return "LOV_Deb2_Div";
                    } else if (rv.equals("Касса")) {
                        return "LOV_Deb2_Kassa";
                    } else if (rv.equals("Контрагенты")) {
                        return "LOV_Deb2_Kontrag";
                    } else if (rv.equals("Номенклатура")) {
                        return "LOV_Deb2_Nom";
                    } else {
                        return "LOV_Deb2_Zatr";
                    }

                }
            }

        }
        return null;
    }

    public String retrieveTypeSubc1Kred(String PlanId) {
        ViewRowSetImpl rs = this.getPlanAccRowSet(PlanId);
        Row row = rs.first();
        if (row != null) {
            String pts = (String) row.getAttribute("PlanTypeSubc");
            rs = this.getPlanTypeSubcontoRowSet(pts);
            row = rs.first();
            if (row != null) {
                String rv = (String) row.getAttribute("Fullname");
                if (rv.equals("ЦФО")) {
                    return "LOV_Kred1_Div";
                } else if (rv.equals("Касса")) {
                    return "LOV_Kred1_Kassa";
                } else if (rv.equals("Контрагенты")) {
                    return "LOV_Kred1_Kontrag";
                } else if (rv.equals("Номенклатура")) {
                    return "LOV_Kred1_Nom";
                } else {
                    return "LOV_Kred1_Zatr";
                }

            }

        }
        return null;
    }
    
    public String retrieveTypeSubc2Kred(String PlanId) {
        ViewRowSetImpl rs = this.getPlanAccRowSet(PlanId);
        Row row = rs.first();
        if (row != null) {
            row = rs.next();
            if (row != null) {
                String pts = (String) row.getAttribute("PlanTypeSubc");
                rs = this.getPlanTypeSubcontoRowSet(pts);
                row = rs.first();
                if (row != null) {
                    String rv = (String) row.getAttribute("Fullname");
                    if (rv.equals("ЦФО")) {
                        return "LOV_Kred2_Div";
                    } else if (rv.equals("Касса")) {
                        return "LOV_Kred2_Kassa";
                    } else if (rv.equals("Контрагенты")) {
                        return "LOV_Kred2_Kontrag";
                    } else if (rv.equals("Номенклатура")) {
                        return "LOV_Kred2_Nom";
                    } else {
                        return "LOV_Kred2_Zatr";
                    }

                }
            }

        }
        return null;
    }
}

