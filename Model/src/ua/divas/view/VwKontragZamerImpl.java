package ua.divas.view;

import java.math.BigDecimal;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCDataControl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewObjectImpl;

import ua.divas.classes.DivasView;
import ua.divas.module.AppModuleImpl;
import ua.divas.view.common.VwKontragZamer;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 20 21:09:10 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VwKontragZamerImpl extends DivasView implements VwKontragZamer {

    public String getBallans(String id, String code) {
        return (String)callStoredFunction(VARCHAR2,"UTILITY.ballans_by_kontr(?,?)", new Object[] {id, code});
    }
    
    public void paySelectedRows(String kassaId, BigDecimal Summ) {
        RowSet duplicateRowSet = this.createRowSet("duplicateRowSet");
        duplicateRowSet.first();
        Row currentRow = this.getCurrentRow();
        boolean currentRowDeleted = false;
        Row[] rowsToDelete = duplicateRowSet.getFilteredRows("MarkedForPaymant", true);
        if (rowsToDelete.length > 0) {
            for (Row rw : rowsToDelete) {
                if (rw.getKey().equals(currentRow.getKey())) {
                    currentRowDeleted = true;
                }
                String kontragId = (String)rw.getAttribute("Id");
                //System.out.println("kontragId "+kontragId);
                //oracle.jbo.domain.Number Summ = (oracle.jbo.domain.Number)rw.getAttribute("DebtZamer");
                //System.out.println("Summ "+Summ.bigDecimalValue().toString());
                
                BindingContext bindingContext = BindingContext.getCurrent();
                DCDataControl dc  = bindingContext.findDataControl("AppModuleDataControl"); // Name of application module in datacontrolBinding.cpx
                AppModuleImpl am = (AppModuleImpl)dc.getDataProvider();
                am.addPkoFromZamer(kassaId, kontragId, Summ);
            }
            this.executeQuery();
            if (!currentRowDeleted) {
                this.setCurrentRow(currentRow);
            }
            
        }
        duplicateRowSet.closeRowSet();
    }
    
    public void paySelRow(Row rw, String kassaId, BigDecimal Summ) {
            String kontragId = (String)rw.getAttribute("Id");
            //System.out.println("kontragId "+kontragId);
            //oracle.jbo.domain.Number Summ = (oracle.jbo.domain.Number)rw.getAttribute("DebtZamer");
            //System.out.println("Summ "+Summ.bigDecimalValue().toString());
            
            BindingContext bindingContext = BindingContext.getCurrent();
            DCDataControl dc  = bindingContext.findDataControl("AppModuleDataControl"); // Name of application module in datacontrolBinding.cpx
            AppModuleImpl am = (AppModuleImpl)dc.getDataProvider();
            am.addPkoFromZamer(kassaId, kontragId, Summ);
        }

    /**
     * This is the default constructor (do not remove).
     */
    public VwKontragZamerImpl() {
    }

    /**
     * Returns the bind variable value for u_name.
     * @return bind variable value for u_name
     */
    public String getu_name() {
        return (String) getNamedWhereClauseParam("u_name");
    }

    /**
     * Sets <code>value</code> for bind variable u_name.
     * @param value value to bind as u_name
     */
    public void setu_name(String value) {
        setNamedWhereClauseParam("u_name", value);
    }

    /**
     * Returns the variable value for KonName.
     * @return variable value for KonName
     */
    public String getKonName() {
        return (String) ensureVariableManager().getVariableValue("KonName");
    }

    /**
     * Sets <code>value</code> for variable KonName.
     * @param value value to bind as KonName
     */
    public void setKonName(String value) {
        ensureVariableManager().setVariableValue("KonName", value);
    }
}

