package ua.divas.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import ua.divas.model.ProgSettingsImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 01 13:09:29 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProgSettingsViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_PROGSETTINGS = 0;

    @Override
    public boolean isAttributeUpdateable(int i) {
        BigDecimal editable = this.getEditable();
        if (editable.intValue()==0) {
            return false;
        } else { 
        return super.isAttributeUpdateable(i);
            }
    }

    @Override
    protected void create(AttributeList attributeList) {
        this.setEditable(new BigDecimal(1));
        //this.setForValidation(new Integer(2));
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        DateAfter,
        DateAfterProfit,
        Editable;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int DATEAFTER = AttributesEnum.DateAfter.index();
    public static final int DATEAFTERPROFIT = AttributesEnum.DateAfterProfit.index();
    public static final int EDITABLE = AttributesEnum.Editable.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProgSettingsViewRowImpl() {
    }

    /**
     * Gets ProgSettings entity object.
     * @return the ProgSettings
     */
    public ProgSettingsImpl getProgSettings() {
        return (ProgSettingsImpl) getEntity(ENTITY_PROGSETTINGS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for DATE_AFTER using the alias name DateAfter.
     * @return the DATE_AFTER
     */
    public Timestamp getDateAfter() {
        return (Timestamp) getAttributeInternal(DATEAFTER);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_AFTER using the alias name DateAfter.
     * @param value value to set the DATE_AFTER
     */
    public void setDateAfter(Timestamp value) {
        setAttributeInternal(DATEAFTER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Editable.
     * @return the Editable
     */
    public BigDecimal getEditable() {
        return (BigDecimal) getAttributeInternal(EDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Editable.
     * @param value value to set the  Editable
     */
    public void setEditable(BigDecimal value) {
        setAttributeInternal(EDITABLE, value);
    }

    /**
     * Gets the attribute value for DATE_AFTER_PROFIT using the alias name DateAfterProfit.
     * @return the DATE_AFTER_PROFIT
     */
    public Timestamp getDateAfterProfit() {
        return (Timestamp) getAttributeInternal(DATEAFTERPROFIT);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_AFTER_PROFIT using the alias name DateAfterProfit.
     * @param value value to set the DATE_AFTER_PROFIT
     */
    public void setDateAfterProfit(Timestamp value) {
        setAttributeInternal(DATEAFTERPROFIT, value);
    }
}

