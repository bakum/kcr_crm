package ua.divas.view;

import java.sql.SQLException;

import java.util.Calendar;

import oracle.jbo.Row;
import oracle.jbo.Variable;
import oracle.jbo.common.VariableImpl;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowSetImpl;

import ua.divas.view.common.VwRating;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 06 20:37:29 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VwRatingImpl extends ViewObjectImpl implements VwRating {
    /**
     * This is the default constructor (do not remove).
     */
    public VwRatingImpl() {
    }
    
    private ViewRowSetImpl getSettingsRowSet(String Id) {
        VariableImpl z = new VariableImpl();
        z.setName("KonId");
        ViewObjectImpl vo = (ViewObjectImpl) this.getRootApplicationModule().findViewObject("KontragentsAll1");
        ViewRowSetImpl rs =
            (ViewRowSetImpl) vo.findByViewCriteriaWithBindVars(vo.getViewCriteria("KontragentsAllById"), -1,
                                                               vo.QUERY_MODE_SCAN_DATABASE_TABLES, new Variable[] { z }, new Object[] {
                                                               Id });
        return rs;
    }
    
    public String retrieveKontragName(String Id) {
        ViewRowSetImpl rs = this.getSettingsRowSet(Id);
        Row row = rs.first();
        if (row != null) {
            String rv = (String) row.getAttribute("Fullname");
            return rv;
        }
        return null;
    }
    
    public Date getDateFirst() throws SQLException {
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.DAY_OF_MONTH, calendar.getActualMinimum(Calendar.DAY_OF_MONTH)); // это будет начало месяца
        //calendar.set(Calendar.DAY_OF_MONTH, calendar.getActualMaximum(Calendar.DAY_OF_MONTH)); // это будет конец месяца
        //calendar.set(Calendar.DAY_OF_YEAR, calendar.getActualMaximum(Calendar.DAY_OF_YEAR)); // это будет конец года
        //calendar.set(Calendar.DAY_OF_YEAR, calendar.getActualMinimum(Calendar.DAY_OF_YEAR)); // это будет начало года
        java.util.Date pDate = calendar.getTime();
        oracle.jbo.domain.Date dbDate= new oracle.jbo.domain.Date(new java.sql.Date(pDate.getTime()));
        //oracle.jbo.domain.Date time = new oracle.jbo.domain.Date(pDate);
        return dbDate;
    }
    
    public Date getDateLast() throws SQLException {
        Calendar calendar = Calendar.getInstance();
        //calendar.set(Calendar.DAY_OF_MONTH, calendar.getActualMinimum(Calendar.DAY_OF_MONTH)); // это будет начало месяца
        calendar.set(Calendar.DAY_OF_MONTH, calendar.getActualMaximum(Calendar.DAY_OF_MONTH)); // это будет конец месяца
        //calendar.set(Calendar.DAY_OF_YEAR, calendar.getActualMaximum(Calendar.DAY_OF_YEAR)); // это будет конец года
        //calendar.set(Calendar.DAY_OF_YEAR, calendar.getActualMinimum(Calendar.DAY_OF_YEAR)); // это будет начало года
        java.util.Date pDate = calendar.getTime();
        oracle.jbo.domain.Date dbDate= new oracle.jbo.domain.Date(new java.sql.Date(pDate.getTime()));
        //oracle.jbo.domain.Date time = new oracle.jbo.domain.Date(pDate);
        return dbDate;
    }

    /**
     * Returns the bind variable value for f_dat.
     * @return bind variable value for f_dat
     */
    public Date getf_dat() {
        return (Date) getNamedWhereClauseParam("f_dat");
    }

    /**
     * Sets <code>value</code> for bind variable f_dat.
     * @param value value to bind as f_dat
     */
    public void setf_dat(Date value) {
        setNamedWhereClauseParam("f_dat", value);
    }

    /**
     * Returns the bind variable value for l_dat.
     * @return bind variable value for l_dat
     */
    public Date getl_dat() {
        return (Date) getNamedWhereClauseParam("l_dat");
    }

    /**
     * Sets <code>value</code> for bind variable l_dat.
     * @param value value to bind as l_dat
     */
    public void setl_dat(Date value) {
        setNamedWhereClauseParam("l_dat", value);
    }
}

