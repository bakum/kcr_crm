package ua.divas.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import ua.divas.model.CurrencyImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 07 21:51:13 EEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CurrencyViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_CURRENCY = 0;

    @Override
    public boolean isAttributeUpdateable(int i) {
        BigDecimal editable = this.getEditable();
        if (editable.intValue()==0) {
            return false;
        } else { 
        return super.isAttributeUpdateable(i);
            }
    }

    @Override
    protected void create(AttributeList attributeList) {
        this.setEditable(new BigDecimal(1));
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        IsGroup,
        ParentId,
        Deleted,
        Fullname,
        Code,
        Namefull,
        Version,
        Predefined,
        IdXml,
        Editable,
        ExRatesSettingsView,
        KassaView,
        MovesView,
        MovesView1,
        OrdersView,
        RegRatesView,
        UserSettingsView,
        OrderZamerView,
        OtherZatratyView,
        StartOstView,
        ProfitDistribView;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int ISGROUP = AttributesEnum.IsGroup.index();
    public static final int PARENTID = AttributesEnum.ParentId.index();
    public static final int DELETED = AttributesEnum.Deleted.index();
    public static final int FULLNAME = AttributesEnum.Fullname.index();
    public static final int CODE = AttributesEnum.Code.index();
    public static final int NAMEFULL = AttributesEnum.Namefull.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int PREDEFINED = AttributesEnum.Predefined.index();
    public static final int IDXML = AttributesEnum.IdXml.index();
    public static final int EDITABLE = AttributesEnum.Editable.index();
    public static final int EXRATESSETTINGSVIEW = AttributesEnum.ExRatesSettingsView.index();
    public static final int KASSAVIEW = AttributesEnum.KassaView.index();
    public static final int MOVESVIEW = AttributesEnum.MovesView.index();
    public static final int MOVESVIEW1 = AttributesEnum.MovesView1.index();
    public static final int ORDERSVIEW = AttributesEnum.OrdersView.index();
    public static final int REGRATESVIEW = AttributesEnum.RegRatesView.index();
    public static final int USERSETTINGSVIEW = AttributesEnum.UserSettingsView.index();
    public static final int ORDERZAMERVIEW = AttributesEnum.OrderZamerView.index();
    public static final int OTHERZATRATYVIEW = AttributesEnum.OtherZatratyView.index();
    public static final int STARTOSTVIEW = AttributesEnum.StartOstView.index();
    public static final int PROFITDISTRIBVIEW = AttributesEnum.ProfitDistribView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CurrencyViewRowImpl() {
    }

    /**
     * Gets Currency entity object.
     * @return the Currency
     */
    public CurrencyImpl getCurrency() {
        return (CurrencyImpl) getEntity(ENTITY_CURRENCY);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for IS_GROUP using the alias name IsGroup.
     * @return the IS_GROUP
     */
    public Integer getIsGroup() {
        return (Integer) getAttributeInternal(ISGROUP);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_GROUP using the alias name IsGroup.
     * @param value value to set the IS_GROUP
     */
    public void setIsGroup(Integer value) {
        setAttributeInternal(ISGROUP, value);
    }

    /**
     * Gets the attribute value for PARENT_ID using the alias name ParentId.
     * @return the PARENT_ID
     */
    public String getParentId() {
        return (String) getAttributeInternal(PARENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARENT_ID using the alias name ParentId.
     * @param value value to set the PARENT_ID
     */
    public void setParentId(String value) {
        setAttributeInternal(PARENTID, value);
    }

    /**
     * Gets the attribute value for DELETED using the alias name Deleted.
     * @return the DELETED
     */
    public Integer getDeleted() {
        return (Integer) getAttributeInternal(DELETED);
    }

    /**
     * Sets <code>value</code> as attribute value for DELETED using the alias name Deleted.
     * @param value value to set the DELETED
     */
    public void setDeleted(Integer value) {
        setAttributeInternal(DELETED, value);
    }

    /**
     * Gets the attribute value for FULLNAME using the alias name Fullname.
     * @return the FULLNAME
     */
    public String getFullname() {
        return (String) getAttributeInternal(FULLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FULLNAME using the alias name Fullname.
     * @param value value to set the FULLNAME
     */
    public void setFullname(String value) {
        setAttributeInternal(FULLNAME, value);
    }

    /**
     * Gets the attribute value for CODE using the alias name Code.
     * @return the CODE
     */
    public String getCode() {
        return (String) getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name Code.
     * @param value value to set the CODE
     */
    public void setCode(String value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for NAMEFULL using the alias name Namefull.
     * @return the NAMEFULL
     */
    public String getNamefull() {
        return (String) getAttributeInternal(NAMEFULL);
    }

    /**
     * Sets <code>value</code> as attribute value for NAMEFULL using the alias name Namefull.
     * @param value value to set the NAMEFULL
     */
    public void setNamefull(String value) {
        setAttributeInternal(NAMEFULL, value);
    }

    /**
     * Gets the attribute value for VERSION using the alias name Version.
     * @return the VERSION
     */
    public Timestamp getVersion() {
        return (Timestamp) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for VERSION using the alias name Version.
     * @param value value to set the VERSION
     */
    public void setVersion(Timestamp value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for PREDEFINED using the alias name Predefined.
     * @return the PREDEFINED
     */
    public Integer getPredefined() {
        return (Integer) getAttributeInternal(PREDEFINED);
    }

    /**
     * Sets <code>value</code> as attribute value for PREDEFINED using the alias name Predefined.
     * @param value value to set the PREDEFINED
     */
    public void setPredefined(Integer value) {
        setAttributeInternal(PREDEFINED, value);
    }

    /**
     * Gets the attribute value for ID_XML using the alias name IdXml.
     * @return the ID_XML
     */
    public String getIdXml() {
        return (String) getAttributeInternal(IDXML);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_XML using the alias name IdXml.
     * @param value value to set the ID_XML
     */
    public void setIdXml(String value) {
        setAttributeInternal(IDXML, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Editable.
     * @return the Editable
     */
    public BigDecimal getEditable() {
        return (BigDecimal) getAttributeInternal(EDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Editable.
     * @param value value to set the  Editable
     */
    public void setEditable(BigDecimal value) {
        setAttributeInternal(EDITABLE, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ExRatesSettingsView.
     */
    public Row getExRatesSettingsView() {
        return (Row) getAttributeInternal(EXRATESSETTINGSVIEW);
    }

    /**
     * Sets the master-detail link ExRatesSettingsView between this object and <code>value</code>.
     */
    public void setExRatesSettingsView(Row value) {
        setAttributeInternal(EXRATESSETTINGSVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link KassaView.
     */
    public RowIterator getKassaView() {
        return (RowIterator) getAttributeInternal(KASSAVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MovesView.
     */
    public RowIterator getMovesView() {
        return (RowIterator) getAttributeInternal(MOVESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MovesView1.
     */
    public RowIterator getMovesView1() {
        return (RowIterator) getAttributeInternal(MOVESVIEW1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrdersView.
     */
    public RowIterator getOrdersView() {
        return (RowIterator) getAttributeInternal(ORDERSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link RegRatesView.
     */
    public RowIterator getRegRatesView() {
        return (RowIterator) getAttributeInternal(REGRATESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link UserSettingsView.
     */
    public RowIterator getUserSettingsView() {
        return (RowIterator) getAttributeInternal(USERSETTINGSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrderZamerView.
     */
    public RowIterator getOrderZamerView() {
        return (RowIterator) getAttributeInternal(ORDERZAMERVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OtherZatratyView.
     */
    public RowIterator getOtherZatratyView() {
        return (RowIterator) getAttributeInternal(OTHERZATRATYVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link StartOstView.
     */
    public RowIterator getStartOstView() {
        return (RowIterator) getAttributeInternal(STARTOSTVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ProfitDistribView.
     */
    public RowIterator getProfitDistribView() {
        return (RowIterator) getAttributeInternal(PROFITDISTRIBVIEW);
    }
}

