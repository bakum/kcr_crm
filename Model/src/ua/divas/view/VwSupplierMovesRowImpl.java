package ua.divas.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 05 11:05:30 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VwSupplierMovesRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        KontragId,
        Kontrag,
        DivisionId,
        TableName,
        Code,
        SumSumm,
        SumSummPrihod,
        SumSummRashod,
        RegistratorId,
        Period,
        RegString,
        Payed,
        Mark,
        SumRko,
        MarkForPay,
        BallForOrder,
        SumPko,
        SumRashod,
        OrdersTpNachisleniaView,
        RkoVOSuppl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int KONTRAGID = AttributesEnum.KontragId.index();
    public static final int KONTRAG = AttributesEnum.Kontrag.index();
    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int TABLENAME = AttributesEnum.TableName.index();
    public static final int CODE = AttributesEnum.Code.index();
    public static final int SUMSUMM = AttributesEnum.SumSumm.index();
    public static final int SUMSUMMPRIHOD = AttributesEnum.SumSummPrihod.index();
    public static final int SUMSUMMRASHOD = AttributesEnum.SumSummRashod.index();
    public static final int REGISTRATORID = AttributesEnum.RegistratorId.index();
    public static final int PERIOD = AttributesEnum.Period.index();
    public static final int REGSTRING = AttributesEnum.RegString.index();
    public static final int PAYED = AttributesEnum.Payed.index();
    public static final int MARK = AttributesEnum.Mark.index();
    public static final int SUMRKO = AttributesEnum.SumRko.index();
    public static final int MARKFORPAY = AttributesEnum.MarkForPay.index();
    public static final int BALLFORORDER = AttributesEnum.BallForOrder.index();
    public static final int SUMPKO = AttributesEnum.SumPko.index();
    public static final int SUMRASHOD = AttributesEnum.SumRashod.index();
    public static final int ORDERSTPNACHISLENIAVIEW = AttributesEnum.OrdersTpNachisleniaView.index();
    public static final int RKOVOSUPPL = AttributesEnum.RkoVOSuppl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VwSupplierMovesRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for the calculated attribute KontragId.
     * @return the KontragId
     */
    public String getKontragId() {
        return (String) getAttributeInternal(KONTRAGID);
    }

    /**
     * Gets the attribute value for the calculated attribute Kontrag.
     * @return the Kontrag
     */
    public String getKontrag() {
        return (String) getAttributeInternal(KONTRAG);
    }

    /**
     * Gets the attribute value for the calculated attribute DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String) getAttributeInternal(DIVISIONID);
    }

    /**
     * Gets the attribute value for the calculated attribute TableName.
     * @return the TableName
     */
    public String getTableName() {
        return (String) getAttributeInternal(TABLENAME);
    }

    /**
     * Gets the attribute value for the calculated attribute Code.
     * @return the Code
     */
    public String getCode() {
        return (String) getAttributeInternal(CODE);
    }

    /**
     * Gets the attribute value for the calculated attribute SumSumm.
     * @return the SumSumm
     */
    public BigDecimal getSumSumm() {
        return (BigDecimal) getAttributeInternal(SUMSUMM);
    }

    /**
     * Gets the attribute value for the calculated attribute SumSummPrihod.
     * @return the SumSummPrihod
     */
    public BigDecimal getSumSummPrihod() {
        return (BigDecimal) getAttributeInternal(SUMSUMMPRIHOD);
    }

    /**
     * Gets the attribute value for the calculated attribute SumSummRashod.
     * @return the SumSummRashod
     */
    public BigDecimal getSumSummRashod() {
        return (BigDecimal) getAttributeInternal(SUMSUMMRASHOD);
    }

    /**
     * Gets the attribute value for the calculated attribute RegistratorId.
     * @return the RegistratorId
     */
    public String getRegistratorId() {
        return (String) getAttributeInternal(REGISTRATORID);
    }

    /**
     * Gets the attribute value for the calculated attribute Period.
     * @return the Period
     */
    public Timestamp getPeriod() {
        return (Timestamp) getAttributeInternal(PERIOD);
    }

    /**
     * Gets the attribute value for the calculated attribute RegString.
     * @return the RegString
     */
    public String getRegString() {
        return (String) getAttributeInternal(REGSTRING);
    }

    /**
     * Gets the attribute value for the calculated attribute Payed.
     * @return the Payed
     */
    public String getPayed() {
        return (String) getAttributeInternal(PAYED);
    }

    /**
     * Gets the attribute value for the calculated attribute Mark.
     * @return the Mark
     */
    public Integer getMark() {
        return (Integer) getAttributeInternal(MARK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Mark.
     * @param value value to set the  Mark
     */
    public void setMark(Integer value) {
        setAttributeInternal(MARK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumRko.
     * @return the SumRko
     */
    public Number getSumRko() {
        return (Number) getAttributeInternal(SUMRKO);
    }

    /**
     * Gets the attribute value for the calculated attribute MarkForPay.
     * @return the MarkForPay
     */
    public Boolean getMarkForPay() {
        Integer mrk = this.getMark();
        if (mrk == 0) {
            return false;
        } else {
            return true;
        }
        //return (Boolean) getAttributeInternal(MARKFORPAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MarkForPay.
     * @param value value to set the  MarkForPay
     */
    public void setMarkForPay(Boolean value) {
        if (value == true) {
            this.setMark(1);
        } else {
            this.setMark(0);
        }
        //setAttributeInternal(MARKFORPAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BallForOrder.
     * @return the BallForOrder
     */
    public Number getBallForOrder() {
        return (Number) getAttributeInternal(BALLFORORDER);
    }


    /**
     * Gets the attribute value for the calculated attribute SumPko.
     * @return the SumPko
     */
    public Number getSumPko() {
        return (Number) getAttributeInternal(SUMPKO);
    }

    /**
     * Gets the attribute value for the calculated attribute SumRashor.
     * @return the SumRashor
     */
    public Number getSumRashod() {
        return (Number) getAttributeInternal(SUMRASHOD);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrdersTpNachisleniaView.
     */
    public RowIterator getOrdersTpNachisleniaView() {
        return (RowIterator) getAttributeInternal(ORDERSTPNACHISLENIAVIEW);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link RkoVOSuppl.
     */
    public RowIterator getRkoVOSuppl() {
        return (RowIterator) getAttributeInternal(RKOVOSUPPL);
    }
}

