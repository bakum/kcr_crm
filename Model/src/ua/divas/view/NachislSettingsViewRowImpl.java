package ua.divas.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import ua.divas.model.NachislSettingsImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 20 20:51:23 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NachislSettingsViewRowImpl extends ViewRowImpl {

    public static final int ENTITY_NACHISLSETTINGS = 0;
    public static final int ENTITY_PAYSETTINGS = 0;

    @Override
    public boolean isAttributeUpdateable(int i) {
        BigDecimal editable = this.getEditable();
        if (editable.intValue()==0) {
            return false;
        } else { 
        return super.isAttributeUpdateable(i);
            }
    }

    @Override
    protected void create(AttributeList attributeList) {
        this.setEditable(new BigDecimal(1));
        //this.setForValidation(new Integer(2));
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        UserId,
        PayId,
        Version,
        BaseId,
        DivisionId,
        Summa,
        Editable,
        UsersView1,
        PaySettingsView1,
        BaseOfNachislView1,
        DivisionsView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int PAYID = AttributesEnum.PayId.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int BASEID = AttributesEnum.BaseId.index();
    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int SUMMA = AttributesEnum.Summa.index();
    public static final int EDITABLE = AttributesEnum.Editable.index();
    public static final int USERSVIEW1 = AttributesEnum.UsersView1.index();
    public static final int PAYSETTINGSVIEW1 = AttributesEnum.PaySettingsView1.index();
    public static final int BASEOFNACHISLVIEW1 = AttributesEnum.BaseOfNachislView1.index();
    public static final int DIVISIONSVIEW1 = AttributesEnum.DivisionsView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NachislSettingsViewRowImpl() {
    }

    /**
     * Gets NachislSettings entity object.
     * @return the NachislSettings
     */
    public NachislSettingsImpl getNachislSettings() {
        return (NachislSettingsImpl) getEntity(ENTITY_NACHISLSETTINGS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for USER_ID using the alias name UserId.
     * @return the USER_ID
     */
    public String getUserId() {
        return (String) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID using the alias name UserId.
     * @param value value to set the USER_ID
     */
    public void setUserId(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for PAY_ID using the alias name PayId.
     * @return the PAY_ID
     */
    public String getPayId() {
        return (String) getAttributeInternal(PAYID);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_ID using the alias name PayId.
     * @param value value to set the PAY_ID
     */
    public void setPayId(String value) {
        setAttributeInternal(PAYID, value);
    }

    /**
     * Gets the attribute value for VERSION using the alias name Version.
     * @return the VERSION
     */
    public Timestamp getVersion() {
        return (Timestamp) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for VERSION using the alias name Version.
     * @param value value to set the VERSION
     */
    public void setVersion(Timestamp value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for BASE_ID using the alias name BaseId.
     * @return the BASE_ID
     */
    public String getBaseId() {
        return (String) getAttributeInternal(BASEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BASE_ID using the alias name BaseId.
     * @param value value to set the BASE_ID
     */
    public void setBaseId(String value) {
        setAttributeInternal(BASEID, value);
    }

    /**
     * Gets the attribute value for DIVISION_ID using the alias name DivisionId.
     * @return the DIVISION_ID
     */
    public String getDivisionId() {
        return (String) getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for DIVISION_ID using the alias name DivisionId.
     * @param value value to set the DIVISION_ID
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for SUMMA using the alias name Summa.
     * @return the SUMMA
     */
    public BigDecimal getSumma() {
        return (BigDecimal) getAttributeInternal(SUMMA);
    }

    /**
     * Sets <code>value</code> as attribute value for SUMMA using the alias name Summa.
     * @param value value to set the SUMMA
     */
    public void setSumma(BigDecimal value) {
        setAttributeInternal(SUMMA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Editable.
     * @return the Editable
     */
    public BigDecimal getEditable() {
        return (BigDecimal) getAttributeInternal(EDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Editable.
     * @param value value to set the  Editable
     */
    public void setEditable(BigDecimal value) {
        setAttributeInternal(EDITABLE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UsersView1.
     */
    public RowSet getUsersView1() {
        return (RowSet) getAttributeInternal(USERSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PaySettingsView1.
     */
    public RowSet getPaySettingsView1() {
        return (RowSet) getAttributeInternal(PAYSETTINGSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> BaseOfNachislView1.
     */
    public RowSet getBaseOfNachislView1() {
        return (RowSet) getAttributeInternal(BASEOFNACHISLVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DivisionsView1.
     */
    public RowSet getDivisionsView1() {
        return (RowSet) getAttributeInternal(DIVISIONSVIEW1);
    }
}

