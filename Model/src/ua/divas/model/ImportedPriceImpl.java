package ua.divas.model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 06 14:48:19 EET 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImportedPriceImpl extends DivasEntityNoDelete {
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Dat,
        Artikul,
        Groups,
        NomName,
        EdIzm,
        PriceUsl,
        PriceGoods;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int DAT = AttributesEnum.Dat.index();
    public static final int ARTIKUL = AttributesEnum.Artikul.index();
    public static final int GROUPS = AttributesEnum.Groups.index();
    public static final int NOMNAME = AttributesEnum.NomName.index();
    public static final int EDIZM = AttributesEnum.EdIzm.index();
    public static final int PRICEUSL = AttributesEnum.PriceUsl.index();
    public static final int PRICEGOODS = AttributesEnum.PriceGoods.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ImportedPriceImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Dat, using the alias name Dat.
     * @return the value of Dat
     */
    public Timestamp getDat() {
        return (Timestamp) getAttributeInternal(DAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dat.
     * @param value value to set the Dat
     */
    public void setDat(Timestamp value) {
        setAttributeInternal(DAT, value);
    }

    /**
     * Gets the attribute value for Artikul, using the alias name Artikul.
     * @return the value of Artikul
     */
    public String getArtikul() {
        return (String) getAttributeInternal(ARTIKUL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Artikul.
     * @param value value to set the Artikul
     */
    public void setArtikul(String value) {
        setAttributeInternal(ARTIKUL, value);
    }

    /**
     * Gets the attribute value for Groups, using the alias name Groups.
     * @return the value of Groups
     */
    public String getGroups() {
        return (String) getAttributeInternal(GROUPS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Groups.
     * @param value value to set the Groups
     */
    public void setGroups(String value) {
        setAttributeInternal(GROUPS, value);
    }

    /**
     * Gets the attribute value for NomName, using the alias name NomName.
     * @return the value of NomName
     */
    public String getNomName() {
        return (String) getAttributeInternal(NOMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for NomName.
     * @param value value to set the NomName
     */
    public void setNomName(String value) {
        setAttributeInternal(NOMNAME, value);
    }

    /**
     * Gets the attribute value for EdIzm, using the alias name EdIzm.
     * @return the value of EdIzm
     */
    public String getEdIzm() {
        return (String) getAttributeInternal(EDIZM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EdIzm.
     * @param value value to set the EdIzm
     */
    public void setEdIzm(String value) {
        setAttributeInternal(EDIZM, value);
    }

    /**
     * Gets the attribute value for PriceUsl, using the alias name PriceUsl.
     * @return the value of PriceUsl
     */
    public BigDecimal getPriceUsl() {
        return (BigDecimal) getAttributeInternal(PRICEUSL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriceUsl.
     * @param value value to set the PriceUsl
     */
    public void setPriceUsl(BigDecimal value) {
        setAttributeInternal(PRICEUSL, value);
    }

    /**
     * Gets the attribute value for PriceGoods, using the alias name PriceGoods.
     * @return the value of PriceGoods
     */
    public BigDecimal getPriceGoods() {
        return (BigDecimal) getAttributeInternal(PRICEGOODS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriceGoods.
     * @param value value to set the PriceGoods
     */
    public void setPriceGoods(BigDecimal value) {
        setAttributeInternal(PRICEGOODS, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.ImportedPrice");
    }
}

