package ua.divas.model;

import java.sql.Timestamp;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 25 17:37:33 EEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContactDetailsImpl extends DivasEntityNoDelete {
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Version,
        KontragId,
        Adress,
        Phone,
        Email,
        CallLog,
        CompaignsDetails,
        Kontragents;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int KONTRAGID = AttributesEnum.KontragId.index();
    public static final int ADRESS = AttributesEnum.Adress.index();
    public static final int PHONE = AttributesEnum.Phone.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int CALLLOG = AttributesEnum.CallLog.index();
    public static final int COMPAIGNSDETAILS = AttributesEnum.CompaignsDetails.index();
    public static final int KONTRAGENTS = AttributesEnum.Kontragents.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ContactDetailsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.ContactDetails");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public Timestamp getVersion() {
        return (Timestamp) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Version.
     * @param value value to set the Version
     */
    public void setVersion(Timestamp value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for KontragId, using the alias name KontragId.
     * @return the value of KontragId
     */
    public String getKontragId() {
        return (String) getAttributeInternal(KONTRAGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for KontragId.
     * @param value value to set the KontragId
     */
    public void setKontragId(String value) {
        setAttributeInternal(KONTRAGID, value);
    }

    /**
     * Gets the attribute value for Adress, using the alias name Adress.
     * @return the value of Adress
     */
    public String getAdress() {
        return (String) getAttributeInternal(ADRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Adress.
     * @param value value to set the Adress
     */
    public void setAdress(String value) {
        setAttributeInternal(ADRESS, value);
    }

    /**
     * Gets the attribute value for Phone, using the alias name Phone.
     * @return the value of Phone
     */
    public String getPhone() {
        return (String) getAttributeInternal(PHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Phone.
     * @param value value to set the Phone
     */
    public void setPhone(String value) {
        setAttributeInternal(PHONE, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCallLog() {
        return (RowIterator) getAttributeInternal(CALLLOG);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCompaignsDetails() {
        return (RowIterator) getAttributeInternal(COMPAIGNSDETAILS);
    }

    /**
     * @return the associated entity KontragentsImpl.
     */
    public KontragentsImpl getKontragents() {
        return (KontragentsImpl) getAttributeInternal(KONTRAGENTS);
    }

    /**
     * Sets <code>value</code> as the associated entity KontragentsImpl.
     */
    public void setKontragents(KontragentsImpl value) {
        setAttributeInternal(KONTRAGENTS, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }


}

