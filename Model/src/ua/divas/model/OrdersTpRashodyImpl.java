package ua.divas.model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import oracle.jbo.server.TransactionEvent;

import ua.divas.classes.DivasEntity;
import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 27 22:25:14 EET 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrdersTpRashodyImpl extends DivasEntityNoDelete {
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        super.doDML(i, transactionEvent);
        String _id = this.getOrderId();
        callStoredProcedure("ORDERS_ENTRY.orders_move_plan_acc(?)", new Object[] { _id });
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        OrderId,
        DatRash,
        KontrId,
        Summ,
        Description,
        ZatratyId,
        KassaId,
        Kontragents,
        Orders,
        Zatraty,
        Orders1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int ORDERID = AttributesEnum.OrderId.index();
    public static final int DATRASH = AttributesEnum.DatRash.index();
    public static final int KONTRID = AttributesEnum.KontrId.index();
    public static final int SUMM = AttributesEnum.Summ.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ZATRATYID = AttributesEnum.ZatratyId.index();
    public static final int KASSAID = AttributesEnum.KassaId.index();
    public static final int KONTRAGENTS = AttributesEnum.Kontragents.index();
    public static final int ORDERS = AttributesEnum.Orders.index();
    public static final int ZATRATY = AttributesEnum.Zatraty.index();
    public static final int ORDERS1 = AttributesEnum.Orders1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrdersTpRashodyImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.OrdersTpRashody");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for OrderId, using the alias name OrderId.
     * @return the value of OrderId
     */
    public String getOrderId() {
        return (String) getAttributeInternal(ORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderId.
     * @param value value to set the OrderId
     */
    public void setOrderId(String value) {
        setAttributeInternal(ORDERID, value);
    }

    /**
     * Gets the attribute value for DatRash, using the alias name DatRash.
     * @return the value of DatRash
     */
    public Timestamp getDatRash() {
        return (Timestamp) getAttributeInternal(DATRASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for DatRash.
     * @param value value to set the DatRash
     */
    public void setDatRash(Timestamp value) {
        setAttributeInternal(DATRASH, value);
    }

    /**
     * Gets the attribute value for KontrId, using the alias name KontrId.
     * @return the value of KontrId
     */
    public String getKontrId() {
        return (String) getAttributeInternal(KONTRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for KontrId.
     * @param value value to set the KontrId
     */
    public void setKontrId(String value) {
        setAttributeInternal(KONTRID, value);
    }

    /**
     * Gets the attribute value for Summ, using the alias name Summ.
     * @return the value of Summ
     */
    public BigDecimal getSumm() {
        return (BigDecimal) getAttributeInternal(SUMM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Summ.
     * @param value value to set the Summ
     */
    public void setSumm(BigDecimal value) {
        setAttributeInternal(SUMM, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ZatratyId, using the alias name ZatratyId.
     * @return the value of ZatratyId
     */
    public String getZatratyId() {
        return (String) getAttributeInternal(ZATRATYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZatratyId.
     * @param value value to set the ZatratyId
     */
    public void setZatratyId(String value) {
        setAttributeInternal(ZATRATYID, value);
    }

    /**
     * Gets the attribute value for KassaId, using the alias name KassaId.
     * @return the value of KassaId
     */
    public String getKassaId() {
        return (String) getAttributeInternal(KASSAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for KassaId.
     * @param value value to set the KassaId
     */
    public void setKassaId(String value) {
        setAttributeInternal(KASSAID, value);
    }

    /**
     * @return the associated entity KontragentsImpl.
     */
    public KontragentsImpl getKontragents() {
        return (KontragentsImpl) getAttributeInternal(KONTRAGENTS);
    }

    /**
     * Sets <code>value</code> as the associated entity KontragentsImpl.
     */
    public void setKontragents(KontragentsImpl value) {
        setAttributeInternal(KONTRAGENTS, value);
    }

    /**
     * @return the associated entity OrdersImpl.
     */
    public OrdersImpl getOrders() {
        return (OrdersImpl) getAttributeInternal(ORDERS);
    }

    /**
     * Sets <code>value</code> as the associated entity OrdersImpl.
     */
    public void setOrders(OrdersImpl value) {
        setAttributeInternal(ORDERS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public ZatratyImpl getZatraty() {
        return (ZatratyImpl) getAttributeInternal(ZATRATY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setZatraty(ZatratyImpl value) {
        setAttributeInternal(ZATRATY, value);
    }

    /**
     * @return the associated entity OrdersImpl.
     */
    public OrdersImpl getOrders1() {
        return (OrdersImpl) getAttributeInternal(ORDERS1);
    }

    /**
     * Sets <code>value</code> as the associated entity OrdersImpl.
     */
    public void setOrders1(OrdersImpl value) {
        setAttributeInternal(ORDERS1, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }


}

