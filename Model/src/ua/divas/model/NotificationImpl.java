package ua.divas.model;

import java.sql.Timestamp;

import java.sql.Types;

import java.util.UUID;

import oracle.adf.share.ADFContext;
import oracle.adf.share.security.SecurityContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import ua.divas.classes.DivasEntity;
import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 04 21:06:09 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NotificationImpl extends DivasEntityNoDelete {
    
    protected static int VARCHAR2 = Types.VARCHAR;
    
    @Override
    protected void callId() {
        setId(UUID.randomUUID().toString());
        setUserLogin(getSessionUser());
        setUserId(getSessionUserId());
    }
    
    public String getSessionUser() {
        ADFContext adfCtx = ADFContext.getCurrent();
        SecurityContext secCntx = adfCtx.getSecurityContext();
        String user = secCntx.getUserPrincipal().getName();
        //String _user = secCntx.getUserName();
        //Map sessionScope = ADFContext.getCurrent().getSessionScope();
        //String userName = (String)sessionScope.get("userName");
        return user;
    }

    public String getSessionUserId() {
        String _id = (String)callStoredFunction(VARCHAR2, "USR_SETT.GET_USERID(?)", new Object[] { getSessionUser() });
        if (_id.equals("00000000-0000-0000-0000-000000000000"))
            return null;
        else
            return _id;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Version,
        Dat,
        Description,
        UserId,
        Contact,
        Server,
        Client,
        TrgName,
        UserLogin,
        ObjectId,
        StartDate,
        EndDate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int DAT = AttributesEnum.Dat.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int CONTACT = AttributesEnum.Contact.index();
    public static final int SERVER = AttributesEnum.Server.index();
    public static final int CLIENT = AttributesEnum.Client.index();
    public static final int TRGNAME = AttributesEnum.TrgName.index();
    public static final int USERLOGIN = AttributesEnum.UserLogin.index();
    public static final int OBJECTID = AttributesEnum.ObjectId.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NotificationImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.Notification");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public Timestamp getVersion() {
        return (Timestamp) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Version.
     * @param value value to set the Version
     */
    public void setVersion(Timestamp value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for Dat, using the alias name Dat.
     * @return the value of Dat
     */
    public Timestamp getDat() {
        return (Timestamp) getAttributeInternal(DAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dat.
     * @param value value to set the Dat
     */
    public void setDat(Timestamp value) {
        setAttributeInternal(DAT, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public String getUserId() {
        return (String) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for Contact, using the alias name Contact.
     * @return the value of Contact
     */
    public String getContact() {
        return (String) getAttributeInternal(CONTACT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Contact.
     * @param value value to set the Contact
     */
    public void setContact(String value) {
        setAttributeInternal(CONTACT, value);
    }

    /**
     * Gets the attribute value for Server, using the alias name Server.
     * @return the value of Server
     */
    public Integer getServer() {
        return (Integer) getAttributeInternal(SERVER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Server.
     * @param value value to set the Server
     */
    public void setServer(Integer value) {
        setAttributeInternal(SERVER, value);
    }

    /**
     * Gets the attribute value for Client, using the alias name Client.
     * @return the value of Client
     */
    public Integer getClient() {
        return (Integer) getAttributeInternal(CLIENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Client.
     * @param value value to set the Client
     */
    public void setClient(Integer value) {
        setAttributeInternal(CLIENT, value);
    }

    /**
     * Gets the attribute value for TrgName, using the alias name TrgName.
     * @return the value of TrgName
     */
    public String getTrgName() {
        return (String) getAttributeInternal(TRGNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrgName.
     * @param value value to set the TrgName
     */
    public void setTrgName(String value) {
        setAttributeInternal(TRGNAME, value);
    }

    /**
     * Gets the attribute value for UserLogin, using the alias name UserLogin.
     * @return the value of UserLogin
     */
    public String getUserLogin() {
        return (String) getAttributeInternal(USERLOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserLogin.
     * @param value value to set the UserLogin
     */
    public void setUserLogin(String value) {
        setAttributeInternal(USERLOGIN, value);
    }

    /**
     * Gets the attribute value for ObjectId, using the alias name ObjectId.
     * @return the value of ObjectId
     */
    public String getObjectId() {
        return (String) getAttributeInternal(OBJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectId.
     * @param value value to set the ObjectId
     */
    public void setObjectId(String value) {
        setAttributeInternal(OBJECTID, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Timestamp getStartDate() {
        return (Timestamp) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Timestamp value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the value of EndDate
     */
    public Timestamp getEndDate() {
        return (Timestamp) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Timestamp value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }


}

