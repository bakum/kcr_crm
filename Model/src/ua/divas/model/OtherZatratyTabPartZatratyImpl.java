package ua.divas.model;

import java.math.BigDecimal;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import oracle.jbo.server.TransactionEvent;

import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 10 21:46:45 EET 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OtherZatratyTabPartZatratyImpl extends DivasEntityNoDelete {
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        super.doDML(i, transactionEvent);
        String _id = this.getOthId();
        callStoredProcedure("OTHER_ENTRY.other_move_plan_acc(?)", new Object[] { _id });
    }
    
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        OthId,
        ZatrId,
        Summa,
        Zatraty,
        OtherZatraty;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int OTHID = AttributesEnum.OthId.index();
    public static final int ZATRID = AttributesEnum.ZatrId.index();
    public static final int SUMMA = AttributesEnum.Summa.index();
    public static final int ZATRATY = AttributesEnum.Zatraty.index();
    public static final int OTHERZATRATY = AttributesEnum.OtherZatraty.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OtherZatratyTabPartZatratyImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.OtherZatratyTabPartZatraty");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for OthId, using the alias name OthId.
     * @return the value of OthId
     */
    public String getOthId() {
        return (String) getAttributeInternal(OTHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OthId.
     * @param value value to set the OthId
     */
    public void setOthId(String value) {
        setAttributeInternal(OTHID, value);
    }

    /**
     * Gets the attribute value for ZatrId, using the alias name ZatrId.
     * @return the value of ZatrId
     */
    public String getZatrId() {
        return (String) getAttributeInternal(ZATRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZatrId.
     * @param value value to set the ZatrId
     */
    public void setZatrId(String value) {
        setAttributeInternal(ZATRID, value);
    }

    /**
     * Gets the attribute value for Summa, using the alias name Summa.
     * @return the value of Summa
     */
    public BigDecimal getSumma() {
        return (BigDecimal) getAttributeInternal(SUMMA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Summa.
     * @param value value to set the Summa
     */
    public void setSumma(BigDecimal value) {
        setAttributeInternal(SUMMA, value);
    }

    /**
     * @return the associated entity ZatratyImpl.
     */
    public ZatratyImpl getZatraty() {
        return (ZatratyImpl) getAttributeInternal(ZATRATY);
    }

    /**
     * Sets <code>value</code> as the associated entity ZatratyImpl.
     */
    public void setZatraty(ZatratyImpl value) {
        setAttributeInternal(ZATRATY, value);
    }

    /**
     * @return the associated entity OtherZatratyImpl.
     */
    public OtherZatratyImpl getOtherZatraty() {
        return (OtherZatratyImpl) getAttributeInternal(OTHERZATRATY);
    }

    /**
     * Sets <code>value</code> as the associated entity OtherZatratyImpl.
     */
    public void setOtherZatraty(OtherZatratyImpl value) {
        setAttributeInternal(OTHERZATRATY, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }


}

