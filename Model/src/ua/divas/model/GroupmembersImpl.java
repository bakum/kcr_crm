package ua.divas.model;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 15 11:52:06 EEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GroupmembersImpl extends DivasEntityNoDelete {
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        GName,
        GMember,
        Groups,
        Users;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int GNAME = AttributesEnum.GName.index();
    public static final int GMEMBER = AttributesEnum.GMember.index();
    public static final int GROUPS = AttributesEnum.Groups.index();
    public static final int USERS = AttributesEnum.Users.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GroupmembersImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for GName, using the alias name GName.
     * @return the value of GName
     */
    public String getGName() {
        return (String) getAttributeInternal(GNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for GName.
     * @param value value to set the GName
     */
    public void setGName(String value) {
        setAttributeInternal(GNAME, value);
    }

    /**
     * Gets the attribute value for GMember, using the alias name GMember.
     * @return the value of GMember
     */
    public String getGMember() {
        return (String) getAttributeInternal(GMEMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for GMember.
     * @param value value to set the GMember
     */
    public void setGMember(String value) {
        setAttributeInternal(GMEMBER, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getGroups() {
        return (EntityImpl) getAttributeInternal(GROUPS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setGroups(EntityImpl value) {
        setAttributeInternal(GROUPS, value);
    }

    /**
     * @return the associated entity UsersImpl.
     */
    public UsersImpl getUsers() {
        return (UsersImpl) getAttributeInternal(USERS);
    }

    /**
     * Sets <code>value</code> as the associated entity UsersImpl.
     */
    public void setUsers(UsersImpl value) {
        setAttributeInternal(USERS, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.Groupmembers");
    }
}

