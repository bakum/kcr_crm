package ua.divas.model;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import ua.divas.classes.DivasEntityNoDelete;
import ua.divas.ejb.entity.DataQuery;
import ua.divas.ejb.entity.Users;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 16 14:59:27 EEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UserSettingsImpl extends DivasEntityNoDelete {
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        UserId,
        DivisionId,
        FirmaId,
        CurrencyId,
        KassaId,
        MainUsluga,
        ActivitiesId,
        ZamerkontragId,
        KontragId,
        NetId,
        Currency,
        Divisions,
        Firms,
        TypeOfActivities,
        Kassa,
        Nomenklatura,
        Users;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int FIRMAID = AttributesEnum.FirmaId.index();
    public static final int CURRENCYID = AttributesEnum.CurrencyId.index();
    public static final int KASSAID = AttributesEnum.KassaId.index();
    public static final int MAINUSLUGA = AttributesEnum.MainUsluga.index();
    public static final int ACTIVITIESID = AttributesEnum.ActivitiesId.index();
    public static final int ZAMERKONTRAGID = AttributesEnum.ZamerkontragId.index();
    public static final int KONTRAGID = AttributesEnum.KontragId.index();
    public static final int NETID = AttributesEnum.NetId.index();
    public static final int CURRENCY = AttributesEnum.Currency.index();
    public static final int DIVISIONS = AttributesEnum.Divisions.index();
    public static final int FIRMS = AttributesEnum.Firms.index();
    public static final int TYPEOFACTIVITIES = AttributesEnum.TypeOfActivities.index();
    public static final int KASSA = AttributesEnum.Kassa.index();
    public static final int NOMENKLATURA = AttributesEnum.Nomenklatura.index();
    public static final int USERS = AttributesEnum.Users.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UserSettingsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.UserSettings");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public String getUserId() {
        return (String) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the value of DivisionId
     */
    public String getDivisionId() {
        return (String) getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for FirmaId, using the alias name FirmaId.
     * @return the value of FirmaId
     */
    public String getFirmaId() {
        return (String) getAttributeInternal(FIRMAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirmaId.
     * @param value value to set the FirmaId
     */
    public void setFirmaId(String value) {
        setAttributeInternal(FIRMAID, value);
    }

    /**
     * Gets the attribute value for CurrencyId, using the alias name CurrencyId.
     * @return the value of CurrencyId
     */
    public String getCurrencyId() {
        return (String) getAttributeInternal(CURRENCYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrencyId.
     * @param value value to set the CurrencyId
     */
    public void setCurrencyId(String value) {
        setAttributeInternal(CURRENCYID, value);
    }

    /**
     * Gets the attribute value for KassaId, using the alias name KassaId.
     * @return the value of KassaId
     */
    public String getKassaId() {
        return (String) getAttributeInternal(KASSAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for KassaId.
     * @param value value to set the KassaId
     */
    public void setKassaId(String value) {
        setAttributeInternal(KASSAID, value);
    }

    /**
     * Gets the attribute value for MainUsluga, using the alias name MainUsluga.
     * @return the value of MainUsluga
     */
    public String getMainUsluga() {
        return (String) getAttributeInternal(MAINUSLUGA);
    }

    /**
     * Sets <code>value</code> as the attribute value for MainUsluga.
     * @param value value to set the MainUsluga
     */
    public void setMainUsluga(String value) {
        setAttributeInternal(MAINUSLUGA, value);
    }

    /**
     * Gets the attribute value for ActivitiesId, using the alias name ActivitiesId.
     * @return the value of ActivitiesId
     */
    public String getActivitiesId() {
        return (String) getAttributeInternal(ACTIVITIESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActivitiesId.
     * @param value value to set the ActivitiesId
     */
    public void setActivitiesId(String value) {
        setAttributeInternal(ACTIVITIESID, value);
    }

    /**
     * Gets the attribute value for ZamerkontragId, using the alias name ZamerkontragId.
     * @return the value of ZamerkontragId
     */
    public String getZamerkontragId() {
        return (String) getAttributeInternal(ZAMERKONTRAGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZamerkontragId.
     * @param value value to set the ZamerkontragId
     */
    public void setZamerkontragId(String value) {
        setAttributeInternal(ZAMERKONTRAGID, value);
    }

    /**
     * Gets the attribute value for KontragId, using the alias name KontragId.
     * @return the value of KontragId
     */
    public String getKontragId() {
        return (String) getAttributeInternal(KONTRAGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for KontragId.
     * @param value value to set the KontragId
     */
    public void setKontragId(String value) {
        setAttributeInternal(KONTRAGID, value);
    }

    /**
     * Gets the attribute value for NetId, using the alias name NetId.
     * @return the value of NetId
     */
    public String getNetId() {
        return (String) getAttributeInternal(NETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NetId.
     * @param value value to set the NetId
     */
    public void setNetId(String value) {
        setAttributeInternal(NETID, value);
    }

    /**
     * @return the associated entity CurrencyImpl.
     */
    public CurrencyImpl getCurrency() {
        return (CurrencyImpl) getAttributeInternal(CURRENCY);
    }

    /**
     * Sets <code>value</code> as the associated entity CurrencyImpl.
     */
    public void setCurrency(CurrencyImpl value) {
        setAttributeInternal(CURRENCY, value);
    }

    /**
     * @return the associated entity DivisionsImpl.
     */
    public DivisionsImpl getDivisions() {
        return (DivisionsImpl) getAttributeInternal(DIVISIONS);
    }

    /**
     * Sets <code>value</code> as the associated entity DivisionsImpl.
     */
    public void setDivisions(DivisionsImpl value) {
        setAttributeInternal(DIVISIONS, value);
    }

    /**
     * @return the associated entity FirmsImpl.
     */
    public FirmsImpl getFirms() {
        return (FirmsImpl) getAttributeInternal(FIRMS);
    }

    /**
     * Sets <code>value</code> as the associated entity FirmsImpl.
     */
    public void setFirms(FirmsImpl value) {
        setAttributeInternal(FIRMS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public TypeOfActivitiesImpl getTypeOfActivities() {
        return (TypeOfActivitiesImpl) getAttributeInternal(TYPEOFACTIVITIES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTypeOfActivities(TypeOfActivitiesImpl value) {
        setAttributeInternal(TYPEOFACTIVITIES, value);
    }

    /**
     * @return the associated entity KassaImpl.
     */
    public KassaImpl getKassa() {
        return (KassaImpl) getAttributeInternal(KASSA);
    }

    /**
     * Sets <code>value</code> as the associated entity KassaImpl.
     */
    public void setKassa(KassaImpl value) {
        setAttributeInternal(KASSA, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public NomenklaturaImpl getNomenklatura() {
        return (NomenklaturaImpl) getAttributeInternal(NOMENKLATURA);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setNomenklatura(NomenklaturaImpl value) {
        setAttributeInternal(NOMENKLATURA, value);
    }

    /**
     * @return the associated entity UsersImpl.
     */
    public UsersImpl getUsers() {
        return (UsersImpl) getAttributeInternal(USERS);
    }

    /**
     * Sets <code>value</code> as the associated entity UsersImpl.
     */
    public void setUsers(UsersImpl value) {
        setAttributeInternal(USERS, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    /**
     * Validation method for UserSettings.
     */
    public boolean validateUserSettings2() {
        String uId = getUserId();
        //String zkId = getZamerkontragId();
        String kId = getKontragId();
        Users u = DataQuery.getZamerUser(uId);
        Integer isZamer = u.getIsZamer();
        if (kId == null && isZamer.intValue() == 0) {
            return false;
        }
        return true;
    }


    /**
     * Validation method for UserSettings.
     */
    public boolean validateUserSettings1() {
        String zkId = getZamerkontragId();
        if (DataQuery.zamerInUseUser(zkId)) {
            return false;
        }
        return true;
    }


    /**
     * Validation method for UserSettings.
     */
    public boolean validateUserSettings() {
        String uId = getUserId();
        String zkId = getZamerkontragId();
        Users u = DataQuery.getZamerUser(uId);
        Integer isZamer = u.getIsZamer();
        if (zkId == null && isZamer.intValue() == 1) {
            return false;
        }
        return true;
    }


}

